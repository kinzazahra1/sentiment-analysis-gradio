# -*- coding: utf-8 -*-
"""MLOPs Assignment 1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Qbr1NAdGRqNeN6_2_TvzaihdZMDPiPZX
"""

!pip install scikit-learn gradio

import pickle
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.pipeline import Pipeline
from sklearn.linear_model import LogisticRegression

# Example data (texts and labels)
texts = ["I love this!", "This is terrible.", "I'm very happy with this product.", "I hate it."]
labels = [1, 0, 1, 0]  # 1 for positive, 0 for negative

# Create and train a pipeline model
pipeline = Pipeline([
    ('vectorizer', TfidfVectorizer()),
    ('classifier', LogisticRegression())
])
pipeline.fit(texts, labels)

# Save the model to a file
with open('/content/sentiment_model.pkl', 'wb') as f:
    pickle.dump(pipeline, f)

print("Model saved successfully!")

from google.colab import files
files.download('/content/sentiment_model.pkl')

import pickle
import gradio as gr

# Load the pre-trained model
with open('/content/sentiment_model.pkl', 'rb') as f:
    model = pickle.load(f)

# Define the inference function
def sentiment_analysis(text):
    prediction = model.predict([text])
    return "Positive" if prediction[0] == 1 else "Negative"

# Create a Gradio interface
interface = gr.Interface(fn=sentiment_analysis, inputs="text", outputs="text")
interface.launch()

from google.colab import files
files.download('/content/sentiment_model.pkl')